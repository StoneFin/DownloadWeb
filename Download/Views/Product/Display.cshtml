@model Download.Models.ProductDisplayView
@using MarkdownDeep;
@{
    ViewBag.Title = "Display";
    int i = 0;
    //contains the converted ReadMe file
    var file = ViewData["Content"];
    var search = ViewData["search"];
    var pageNum = ViewData["page"];

}

<h2 style="margin-bottom: 0px; ">@Model.ProductName</h2>
<hr style="margin-top: 0px;" />

@*Check to see if there are any versions available for display/download*@
<div class="body-content form-horizontal clearfix" style="margin-top: 0px;">

    @if (Model.Versions.Count() > 0)
    {

        <div class="form-group clearfix" style="margin-bottom: 0px; padding-bottom: 4px; padding-left: 3px;">



            <div class="form-group">
                <div class="col-md-2">
                    <b>@Html.DisplayNameFor(model => Model.Versions[0].VersionName)</b>
                </div>
                <div class="col-md-2">
                    @Html.Encode(Model.Versions[0].VersionName)
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-2">
                    <b>@Html.Encode("Date Uploaded")</b>
                </div>
                <div class="col-md-2">
                    @Html.DisplayFor(model => Model.Versions[0].DateCreated)
                </div>
            </div>

            <div class="text-danger">@ViewBag.Message</div>

            <br />

            @foreach (var arch in Model.Versions[0].Archives)
            {
                if (arch.Installer != null)
                {

                    using (Html.BeginForm("Download", "Product", new { id = Model.Id, fileName = arch.Installer, verId = Model.Versions[0].VersionId, archId = arch.ArchiveId, searchString = search, page = pageNum }, FormMethod.Post, new { @class = "col-md-3" }))
                    {
                        <b>@arch.Installer</b> <span>(@arch.InstallerSize KB)</span>
                        <br />
                        <button type="submit" class="btn btn-primary">
                            <span class="glyphicon glyphicon-download"></span> Download Installer
                        </button>

                    }
                }
                if (arch.Exe != null)
                {

                    using (Html.BeginForm("Download", "Product", new { id = Model.Id, fileName = arch.Exe, verId = Model.Versions[0].VersionId, archId = arch.ArchiveId, searchString = search, page = pageNum }, FormMethod.Post, new { @class = "col-md-3" }))
                    {
                        <b>@arch.Exe</b> <span>(@arch.ExeSize KB)</span>
                        <br />
                        <button type="submit" class="btn btn-primary">
                            <span class="glyphicon glyphicon-download"></span> Download Exe
                        </button>
                    }
                }

            }



        </div>
        <br />
        if (Model.Versions[0].ExtraFiles.Count() != 0)
        {
            <div class="clearfix form-group" style="margin-bottom: 0px;">

                <h5 style="margin-bottom: 0px; margin-top: 0px;">Extra Files</h5>
                <hr style="margin-top: 0px;" />

            </div>
            <div class="form-group clearfix" style="margin-top: 0px; margin-bottom: 0px;">


                @foreach (var ex in Model.Versions[0].ExtraFiles)
                {
                    if (ex != null)
                    {
                        <div class="col-md-3">

                            <b> @Html.DisplayFor(model => ex.FileName) </b>
                            (@ex.FileSize KB)
                            @using (Html.BeginForm("Download", "Product", new { id = Model.Id, fileName = ex.FileName, fileId = ex.ExtraFileId, verId = Model.Versions[0].VersionId, searchString = search, page = pageNum }, FormMethod.Post))
                            {

                                <button type="submit" class="btn btn-sm">
                                    <span class="glyphicon glyphicon-download"></span> Download
                                </button>

                            }
                            <i>@Html.DisplayFor(model => ex.FileDescription)</i><br />
                        </div>
                    }
                }


            </div>
            <br />
        }

        if (Model.Versions.Count() > 1)
        {
            <div class="clearfix form-group" style="margin-bottom: 0px;">

                <h5 style="margin-bottom: 0px; margin-top: 0px; ">Archived Versions</h5>
                <hr style="margin-top: 0px;" />

            </div>
            <div style="border-top: 0px; margin-top: 0px; margin-bottom: 0px;" class="clearfix form-group">
                @*If there is more than just the version being shown up above, display links to the additional versions*@


                @foreach (var version in Model.Versions)
                {
                    //Skip the first version becuase it is being displayed
                    if (i == 0)
                    {
                        i++;
                    }
                    else
                    {
                        @*table of archived versions for this product*@
                        @Html.ActionLink(version.VersionName, "Display", new { id = Model.Id, VersionId = version.VersionId, searchString = search, page = pageNum })<br />

                    }
                }

            </div>
            <br />
        }

        <div class="clearfix form-group" style="margin-bottom: 0px;">
            <h5 style="margin-bottom: 0px; margin-top: 0px; ">Read Me</h5>
            <hr style="margin-top: 0px;" />
        </div>
        <div class="form-group clearfix" style="margin-top: 0px">




            <div style="margin-left: 20px; margin-right: 20px">
                @*Display the Markdown readme that was converted to html*@
                @Html.Raw(file)
            </div>
        </div>



    }
</div>
@if (User.IsInRole("admin") == true || User.IsInRole("member") == true)
{
    <h3>@ViewBag.Message1</h3>
}
else
{
    @*Display another register teaser if they are not members yet*@
    <h3>@ViewBag.Message2</h3>
}

@Html.ActionLink("Back to List", "Index", new { searchString = search, page = pageNum })
