@model Download.Models.Product

@{
    ViewBag.Title = "Edit";
    var search = ViewData["search"];
    var pageNum = ViewData["page"];

}

<h2 style="font-family: Arial">Edit</h2>


@using (Html.BeginForm(new { searchString = search, page = pageNum }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="background-color: rgba(255, 255, 255, 0.26); border: 2px solid #ffffff; ">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ProductId)
        @Html.HiddenFor(model => model.ProductStatus)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName)
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>
        <table style="background-color: rgba(255, 255, 255, 0.50);" class="table table-hover">

            <tr>
                <th>
                    @Html.Encode("Version")
                </th>
                <th>
                    @Html.Encode(".exe")
                </th>
                <th>
                    @Html.Encode("Installer")
                </th>
                <th>
                    @Html.Encode("ReadMe")
                </th>
                <th>
                    @Html.Encode("Extra Files")
                </th>
                <th>

                </th>
                </tr>
@foreach (var version in Model.Versions)
{

    <tr style="border: 2px solid #ffffff">
        <td>
            @version.VersionName
        </td>
        @foreach (var arch in version.Archives)
        {
            <td>
                @arch.Exe
            </td>
            <td>
                @arch.Installer
            </td>
            <td>
                @arch.ReadMe
            </td>
        }
        @if (version.ExtraFiles != null) { 
        <td>
        @foreach (var ex in version.ExtraFiles)
        {
            
                @ex.FileName<br />
            
        }
            </td>
        }
        <td>
            @Html.ActionLink("Edit", "EditVersion", new { id = version.VersionId, searchString = search, page = pageNum }) |
            @Html.ActionLink("Remove", "RemoveVersion", new { id = version.VersionId, searchString = search, page = pageNum })
        </td>
    </tr>

}

        </table>
        <div class="col-md-2">
            <p class="tab"> @Html.ActionLink("Add Version", "AddVersion", new { id = Model.ProductId, searchString = search, page = pageNum })</p>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>

        </div>
     </div>
}

<div >
    <p class="tab">@Html.ActionLink("Back to List", "Index", new { searchString = search, page = pageNum })</p>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
