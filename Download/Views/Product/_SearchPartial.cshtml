@model PagedList.IPagedList<Download.Models.Product>
@using Download.Models;
@using PagedList.Mvc;

@{
    ViewBag.Title = "_SearchPartial";
    //this allows to view to see what was previously typed into the search bar

    var search = ViewData["search"];
    var pageNum = ViewData["page"];

}
<div class="body-content">
    <div class="clearfix form-group" style="margin-left: 0px;">
        @*The default text in the search bar is the text from the last search*@

        <div class="col-md-8">
            @using (Html.BeginForm(new { page = 1 }))
            {
                <b>Search Products: </b>
                <div class="btn-group">
                    @Html.TextBox("searchString", search, new { @style = "text-align: left;", @class = "btn btn-default", @autocomplete = "on" })
                    <button type="submit" class="btn btn-info">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </div>
            }
        </div>
        <div class="col-md-2 col-md-offset-2">
            @if (User.IsInRole("admin"))
            {
                using (Html.BeginForm("Create", "Product", FormMethod.Get, new { searchString = search, page = pageNum }))
                {
                    @Html.ValidationSummary()
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-info">
                        <span class="glyphicon glyphicon-plus-sign"></span> Create New Product
                    </button>
                }
            }
        </div>
    </div>

    <table class="table table-hover" style="background-color: rgba(255, 255, 255, 0.00);">

        @foreach (var item in Model)
        {
            <tr style="background-color: rgba(255, 255, 255, 0.50);">
                <td style="font-size: larger;" class="col-md-4">
                    @item.ProductName
                </td>
                <td class="col-md-6">
                    @using (Html.BeginForm("Display", "Product", new { id = item.ProductId, searchString = search, page = pageNum }))
                    {
                        <input type="submit" value="Download" class="btn btn-block" />
                    }
                </td>

                @if (User.IsInRole("admin") == true)
                {
                    <td class="col-md-2 row">
                        @Html.ActionLink("Edit", "Edit", new { id = item.ProductId, searchString = search, page = pageNum }, new { @style = "color: inherit;" }) |
                        @Html.ActionLink("Remove", "Remove", new { id = item.ProductId, searchString = search, page = pageNum }, new { @style = "color: inherit;" })
                    </td>
                }

            </tr>
        }

    </table>
    <div class="text-danger">@ViewBag.Message</div>
    <br />
    @*Dispaly no pagers on intial display of the page becuase no products are shown*@
    @if (Model.PageCount > 0)
    {
        <div>
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @*If there is zero or one page, no need to display page links*@
            @if (Model.PageCount > 1)
            {
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, searchString = search }))
            }
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}