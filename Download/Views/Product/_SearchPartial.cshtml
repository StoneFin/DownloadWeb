@model PagedList.IPagedList<Download.Models.Product>
@using Download.Models;
@using PagedList.Mvc;

@{
    ViewBag.Title = "_SearchPartial";
    //this allows to view to see what was previously typed into the search bar
    var search = ViewData["search"];



}
<div class="body-content" style="background-color: rgba(255, 255, 255, 0.32); border: 2px solid #ffffff;">

    <p>
        @if (User.IsInRole("admin"))
        {
            @Html.ActionLink("Create New", "Create", new { searchString = search })
        }
        @using (Html.BeginForm())
        {
        <p>
            @*The default text in the search bar is the text from the last search*@
            <b>Search Products: </b>@Html.TextBox("searchString", search, new { @style = "text-align: left;", @class = "btn btn-default", @autocomplete ="on" })
            <input type="submit" value="Search" class="btn btn-info" />
        </p>
        }
        </p>
        <table class="table table-hover" style="background-color: #ffffff; border: 2px solid #ffffff">



            @foreach (var item in Model)
            {
                using (Html.BeginForm("Display", "Product", new { id = item.ProductId}))
                {

                    <tr style="background-color: rgba(182, 255, 0, 0.25); border: 2px solid #ffffff">
                        <td style="font-size: larger; font-style: initial">
                            @item.ProductName
                        </td>
                        <td>
                            <input type="submit" value="Download" class="btn btn-primary" />
                        </td>
                        
                        @if (User.IsInRole("admin") == true)
                        {
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }) |
                                @Html.ActionLink("Remove", "Remove", new { id = item.ProductId })
                            </td>
                        }
                        
                    </tr>
                }

            }

        </table>
        <br />
    @*Dispaly no pagers on intial display of the page becuase no products are shown*@
    @if(Model.PageCount > 0){
        <div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page}))
            </div>
    }
    </div>


