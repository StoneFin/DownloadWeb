@model Download.Models.ApplicationUser

@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework;
@using System.Web.Mvc
@using Download.Models

@*This view is not used becuase creating a user is as easy as registering*@

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Users</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName)
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Roles, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    
    //var roles = new IdentityRole();

    // var roles = Roles.GetAllRoles().Select(x => new SelectListItem() { Text = x, Value = x});
    ApplicationDbContext db = new ApplicationDbContext();
    var RoleList = new List<string>();
    var RoleQry = from r in db.Roles
                  orderby r.Name
                  select r.Name;
    RoleList.AddRange(RoleQry.Distinct());
    var AllRoles = RoleList.Select(x => new SelectListItem() { Text = x, Value = x });
  
                }
                @Html.DropDownList("roleName", AllRoles)
            </div>
        </div>
       <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
